{"version":3,"sources":["api/api.js","redux/dialogs-reducer.js","components/Users/users.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","assets/images/user.png","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/common/FormsControls/FormsControls.js","assets/images/preloader.gif","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","utils/validators/validators.js","components/Header/Header.module.css","redux/profile-reducer.js"],"names":["instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","item","NavLink","to","activeClassName","activeLink","active","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","cn","selectedPage","pageNumber","e","User","user","src","photos","small","userPhoto","disabled","some","Users","props","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","bind","page","totalCount","Header","header","loginBlock","isAuth","SET_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","auth","LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","style","formSummaryError","length","stopSubmit","_error","Redirect","formData","INITIALIZED_SUCCESS","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","App","initializeApp","Route","path","render","AppContainer","withRouter","promise","Promise","all","SamuraiJsApp","BrowserRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","FormControl","input","meta","touched","children","hasError","formControl","Textarea","restProps","child","placeholder","validators","component","text","validate","preloader","value","maxLengthCreator","maxLength","ADD_POST","SET_USER_PROFILE","SET_STATUS","DELETE_POST","posts","likesCount","profile","getUserProfile","setStatus","addPostActionCreator","newPostText","newPost","postId"],"mappings":"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","file":"static/js/main.d3901f04.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: {\n        \"API-KEY\": \"245b3211-4aab-488d-b912-97fc4b676829\"\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            })\n    },\n\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Use profileAPI.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status:status});\n\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe});\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n} ","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n\r\n   switch (action.type) {\r\n       case SEND_MESSAGE:\r\n        let body = action.newMessageBody;\r\n\r\n        return {\r\n            ...state,\r\n            messages: [...state.messages, {id: 6, message: body}]\r\n        };\r\n\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => \r\n    ({ type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\",\"selectedPage\":\"users_selectedPage__1mnwI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item + ' py-2 hover:bg-gray-700 active:bg-green-700'}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active} py-2 hover:bg-gray-700`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active} py-2 hover:bg-gray-700`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n            <div className={s.item + ' py-2' + ' hover:bg-gray-700'}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item + ' py-2' + ' hover:bg-gray-700'}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item + ' py-2' + ' hover:bg-gray-700'}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\n    return items.map(u=>{\n        if (u[objPropName] === itemId){\n            return {...u, ...newObjProps}\n        }\n        return u;\n    })\n}","import { usersAPI } from '../api/api';\r\nimport { updateObjectInArray } from '../utils/object-helpers';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed:true})\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed:false})\r\n            };\r\n\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.count }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const followSuccess = (userId) =>\r\n    ({ type: FOLLOW, userId })\r\n\r\nexport const unfollowSuccess = (userId) =>\r\n    ({ type: UNFOLLOW, userId })\r\n\r\nexport const setUsers = (users) =>\r\n    ({ type: SET_USERS, users })\r\n\r\nexport const setCurrentPage = (currentPage) =>\r\n    ({ type: SET_CURRENT_PAGE, currentPage })\r\n\r\nexport const setTotalUsersCount = (totalUsersCount) =>\r\n    ({ type: SET_TOTAL_USERS_COUNT, count: totalUsersCount })\r\n\r\nexport const toggleIsFetching = (isFetching) =>\r\n    ({ type: TOGGLE_IS_FETCHING, isFetching })\r\n\r\nexport const toggleFollowingProgress = (isFetching, userId) =>\r\n    ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId })\r\n\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page));\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        let response = await apiMethod (userId); \r\n        if (response.data.resultCode == 0) {\r\n            dispatch(actionCreator(userId));\r\n        }\r\n        dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\r\n\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","export default __webpack_public_path__ + \"static/media/user.81251c2b.png\";","import React from \"react\";\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport NavLink from \"react-router-dom/es/NavLink\";\n\nlet User = ({ user, followingInProgress, unfollow, follow }) => {\n    return (\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto} />\n                    </NavLink>\n                </div>\n                <div>\n\n                    {user.followed\n                        ? <button disabled={followingInProgress.some(id => id === user.id)}\n                            onClick={() => { unfollow(user.id); }}>\n                            Unfollow</button>\n\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\n                            follow(user.id);\n                        }} >Follow</button>}\n\n                </div>\n            </span>\n            <span>\n                <span>\n                    <div> {user.name} </div>\n                    <div> {user.status} </div>\n                </span>\n                <span>\n                    <div> {\"u.location.country\"} </div>\n                    <div> {\"u.location.city\"} </div>\n                </span>\n            </span>\n\n        </div>)\n}\n\nexport default User;","import React from \"react\";\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\n\nlet Users = ({ currentPage, onPageChanged, totalUsersCount, pageSize, users, ...props }) => {\n    return <div>\n        <Paginator\n            currentPage={currentPage}\n            onPageChanged={onPageChanged}\n            pageSize={pageSize}\n            totalItemsCount={totalUsersCount}\n        />\n        <div>\n            {\n                users.map(u => <User\n                    user={u}\n                    key={u.id}\n                    followingInProgress={props.followingInProgress}\n                    follow={props.follow}\n                    unfollow={props.unfollow}\n                />\n                )\n            }\n        </div>\n    </div>\n}\n\nexport default Users;","import { createSelector } from \"reselect\";\n\nconst getUsersSelector = (state) => {\n    return state.usersPage.users;\n}\n\nexport const getUsers = createSelector(getUsersSelector, \n    (users) => {\n        return users.filter(u => true);\n    })\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize;\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount;\n}\n\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress;\n}","import React from 'react';\nimport { connect } from 'react-redux';\nimport { follow, unfollow, setCurrentPage, toggleFollowingProgress, requestUsers } from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from '../common/Preloader/Preloader';\nimport { compose } from 'redux';\nimport { getPageSize, getTotalUsersCount, getIsFetching, getFollowingInProgress, getCurrentPage, getUsers } from '../../redux/users-selectors';\n\nclass UsersContainer extends React.Component {\n\n    componentDidMount() {\n        let { currentPage, pageSize } = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        let { pageSize } = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader /> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                followingInProgress={this.props.followingInProgress} />\n\n        </>\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(\n        mapStateToProps,\n        {\n            follow,\n            unfollow,\n            setCurrentPage,\n            toggleFollowingProgress,\n            getUsers: requestUsers\n        }\n    )\n)(UsersContainer);","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header + ' bg-blue-900'}>\r\n        <img src='https://git-scm.com/images/logos/1color-darkbg@2x.png' />\r\n\r\n        <div className={s.loginBlock }>\r\n            {props.isAuth \r\n            ? <div> {props.login} - <button onClick={props.logout}>log out</button> </div> \r\n            :<NavLink to = {'/login'}>Login</NavLink>}\r\n            \r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) =>\n    ({\n        type: SET_USER_DATA,\n        payload: {\n            userId,\n            email,\n            login,\n            isAuth\n        }\n    })\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let { id, email, login } = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n            if (response.data.resultCode === 0) {\n                dispatch(getAuthUserData())\n            } else {\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some Error\";\n                dispatch(stopSubmit(\"login\", { _error: message }));\n            }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from './Header';\nimport { connect } from 'react-redux';\nimport { logout } from '../../redux/auth-reducer';\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <Header {...this.props} />\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n});\n\nexport default connect(mapStateToProps, { logout })(HeaderContainer);","import React from 'react';\nimport { reduxForm } from 'redux-form';\nimport { Input, createField } from '../common/FormsControls/FormsControls';\nimport { required } from '../../utils/validators/validators';\nimport { connect } from 'react-redux';\nimport { login } from '../../redux/auth-reducer';\nimport { Redirect } from 'react-router-dom';\nimport style from \"./../common/FormsControls/FormsControls.module.css\";\n\nconst LoginForm = ({ handleSubmit, error }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <form>\n                {createField(\"Email\", \"email\", [required], Input)}\n                {createField(\"Password\", \"password\", [required], Input, {type:\"password\"})}\n                {createField(null, \"rememberMe\", [], Input, {type:\"checkbox\"}, \"remember me\")}\n\n                {error && <div className={style.formSummaryError}>\n                    {error}\n                </div>\n                }\n                <div>\n                    <button>Login</button>\n                </div>\n            </form>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} />\n\n    </div>\n}\n\nconst mapStateToProps = (state) => (\n    {\n        isAuth: state.auth.isAuth\n    }\n)\n\nexport default connect(mapStateToProps, { login })(Login);","import { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { getAuthUserData } from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n        default:\n            return state;\n    }\n\n}\n\nexport const initializedSuccess = () =>\n    ({\n        type: INITIALIZED_SUCCESS\n    })\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise]).then(() => {\n        dispatch(initializedSuccess());\n    });\n}\n\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunkMiddleware)\r\n    )\r\n);\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, { Component } from 'react';\nimport Preloader from '../components/common/Preloader/Preloader';\n\nexport const withSuspense = (Component) => {\n    return (props) => {\n        return <React.Suspense fallback={<Preloader />}>\n            <Component {...props}/>\n        </React.Suspense>\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport { BrowserRouter, Route, withRouter } from \"react-router-dom\";\nimport UsersContainer from './components/Users/UsersContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/Login';\nimport { connect, Provider } from 'react-redux';\nimport { initializeApp } from './redux/app-reducer';\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport store from \"./redux/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n//import ProfileContainer from './components/Profile/ProfileContainer';\n//import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\n\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n\n    render() {\n\n        if (!this.props.initialized) {\n            return <Preloader />\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer />\n                <Navbar />\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs'\n                        render={withSuspense(DialogsContainer)}/>\n\n                    <Route path='/profile/:userId?'\n                        render={withSuspense(ProfileContainer)} />\n\n                    <Route path='/users'\n                        render={() => <UsersContainer />} />\n\n                    <Route path='/login'\n                        render={() => <LoginPage />} />\n\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, { initializeApp })\n)(App);\n\nconst SamuraiJsApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJsApp;\n","import * as serviceWorker from './serviceWorker';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJsApp from './App';\n\nReactDOM.render(\n    <SamuraiJsApp />,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import React from 'react';\nimport styles from './FormsControls.module.css';\nimport { Field } from 'redux-form';\n\nconst FormControl = ({ input, meta:{touched, error}, children  }) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span> {error} </span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const { input, meta, child, ...restProps } = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field\n            placeholder={placeholder}\n            name={name}\n            validate={validators}\n            component={component}\n            {...props}\n        /> {text}\n    </div>\n)","export default __webpack_public_path__ + \"static/media/preloader.a1a99674.gif\";","import preloader from '../../../assets/images/preloader.gif';\nimport React from 'react';\n\nlet Preloader = (props) => {\nreturn <div><img src = {preloader}/> \n</div>\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","export const required = value => {\nif (value) return undefined;\nreturn \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n    }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};","import { usersAPI, profileAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how are you?', likesCount: 12 },\r\n        { id: 2, message: 'It\\'s my first post', likesCount: 11 },\r\n        { id: 3, message: 'Blabla', likesCount: 11 },\r\n        { id: 4, message: 'Dada', likesCount: 11 }\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return { ...state, profile: action.profile }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state, posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => ({ type: SET_USER_PROFILE, profile })\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\nexport const setStatus = (status) => ({ type: SET_STATUS, status })\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\n\r\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId })\r\n\r\nexport default profileReducer;"],"sourceRoot":""}